#pragma once


#include <string>
#include <map>
#include <functional>


struct GLFWwindow;


namespace Nito
{


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data Structures
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct Window_Config
{
    const int width;
    const int height;
    const std::string title;
    const std::string refresh_rate;
    const std::map<std::string, int> hints;
};


using Window_Loop_Callback = std::function<void()>;


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Interface
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void init_glfw();
GLFWwindow * create_window(const Window_Config & window_config);
GLFWwindow ** get_window();
float get_delta_time();
void run_window_loop(const Window_Loop_Callback & callback);
void terminate_glfw();


} // namespace Nito
